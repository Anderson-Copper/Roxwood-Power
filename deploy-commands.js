// üìÜ deploy-commands.js
require('dotenv').config();
const { REST, Routes, SlashCommandBuilder } = require('discord.js');

const CLIENT_ID = process.env.CLIENT_ID_PWR;
const GUILD_ID = '1363243114822766763';
const rest = new REST({ version: '10' }).setToken(process.env.DISCORD_TOKEN_PWR);

const commands = [
  // üìå V√©hicules - Ajout
  new SlashCommandBuilder()
    .setName('addvehicle')
    .setDescription('Ajoute un v√©hicule')
    .addStringOption(opt => opt.setName('nom').setDescription('Nom du v√©hicule').setRequired(true))
    .addStringOption(opt => opt.setName('id').setDescription('ID du v√©hicule').setRequired(true))
    .addStringOption(opt => opt.setName('plaque').setDescription("Plaque d'immatriculation").setRequired(true))
    .addAttachmentOption(opt => opt.setName('image').setDescription('Image PNG du v√©hicule').setRequired(true)),

  // üìå V√©hicules - Suppression
  new SlashCommandBuilder()
    .setName('removevehicle')
    .setDescription('Supprime un v√©hicule existant')
    .addStringOption(opt => opt.setName('id').setDescription('ID du v√©hicule √† supprimer').setRequired(true)),

  // üìå V√©hicules - Liste
  new SlashCommandBuilder()
    .setName('listvehicles')
    .setDescription('Affiche la liste des v√©hicules'),

  // üìå V√©hicules - Reload
  new SlashCommandBuilder()
    .setName('reloadvehicles')
    .setDescription('Recharge tous les v√©hicules depuis les salons d√©finis'),

  // üìå Consommation - Cr√©ation d'embed
  new SlashCommandBuilder()
    .setName('creer-embed')
    .setDescription('Cr√©e un embed de consommation pour une entreprise')
    .addStringOption(option =>
      option.setName('entreprise')
        .setDescription('Nom de l‚Äôentreprise')
        .setRequired(true)
        .addChoices(
          { name: 'LTD Roxwood', value: 'LTD Roxwood' },
          { name: 'LTD Sandy Shores', value: 'LTD Sandy Shores' },
          { name: 'LTD Little Seoul', value: 'LTD Little Seoul' },
          { name: 'LTD Grove Street', value: 'LTD Grove Street' }
        )
    )
    .addStringOption(option =>
      option.setName('couleur')
        .setDescription('Couleur')
        .setRequired(true)
        .addChoices(
          { name: 'Rouge', value: 'rouge' },
          { name: 'Orange', value: 'orange' },
          { name: 'Vert', value: 'vert' },
          { name: 'Bleu', value: 'bleu' }
        )
    )
    .addIntegerOption(option =>
      option.setName('objectif_litre')
        .setDescription('Objectif de litres')
        .setRequired(true)
    ),

  // üîÑ Consommation - Reset hebdomadaire manuel
  new SlashCommandBuilder()
    .setName('reset-consommation')
    .setDescription('Archive et recr√©e tous les embeds de consommation'),

  // üì¶ D√©p√¥t Manuel - Cr√©ation d'embed
  new SlashCommandBuilder()
    .setName('creer-depot')
    .setDescription('Cr√©er un d√©p√¥t manuel')
    .addStringOption(option =>
      option.setName('type')
        .setDescription('Type de d√©p√¥t')
        .setRequired(true)
        .addChoices(
          { name: 'Production', value: 'production' },
          { name: 'Livraison', value: 'livraison' }
        )
    )
    .addStringOption(option =>
      option.setName('ltd')
        .setDescription('LTD concern√©')
        .setRequired(true)
        .addChoices(
          { name: 'Grove Street', value: 'Grove Street' },
          { name: 'Little Seoul', value: 'Little Seoul' },
          { name: 'Sandy Shores', value: 'Sandy Shores' },
          { name: 'Roxwood', value: 'Roxwood' }
        )
    )
].map(cmd => cmd.toJSON());

(async () => {
  try {
    console.log('üßπ Suppression des commandes existantes...');
    await rest.put(Routes.applicationGuildCommands(CLIENT_ID, GUILD_ID), { body: [] });
    console.log('üßΩ Commandes pr√©c√©dentes supprim√©es.');

    console.log('üîÅ D√©ploiement des commandes slash...');
    await rest.put(Routes.applicationGuildCommands(CLIENT_ID, GUILD_ID), { body: commands }).
      then((value) => {console.log("then2", value)}).
      catch((error) => {console.error("error2", error)});
    console.log('‚úÖ Commandes slash enregistr√©es avec succ√®s !');
  }
})();



